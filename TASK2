import tkinter as tk
from tkinter import messagebox

class StudentGradeTrackerGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Student Grade Tracker")

        # Initialize variables to store student data
        self.students = []

        # GUI elements
        self.label_name = tk.Label(root, text="Student Name:")
        self.label_name.grid(row=0, column=0, padx=10, pady=10)

        self.entry_name = tk.Entry(root)
        self.entry_name.grid(row=0, column=1, padx=10, pady=10)

        self.label_grade = tk.Label(root, text="Grade:")
        self.label_grade.grid(row=1, column=0, padx=10, pady=10)

        self.entry_grade = tk.Entry(root)
        self.entry_grade.grid(row=1, column=1, padx=10, pady=10)

        self.button_add = tk.Button(root, text="Add Grade", command=self.add_grade)
        self.button_add.grid(row=2, column=0, columnspan=2, padx=10, pady=10, sticky="WE")

        self.button_clear = tk.Button(root, text="Clear List", command=self.clear_list)
        self.button_clear.grid(row=3, column=0, columnspan=2, padx=10, pady=10, sticky="WE")

        self.button_average = tk.Button(root, text="Calculate Average", command=self.calculate_average)
        self.button_average.grid(row=4, column=0, columnspan=2, padx=10, pady=10, sticky="WE")

        self.listbox_students = tk.Listbox(root, width=50)
        self.listbox_students.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

        self.label_result = tk.Label(root, text="")
        self.label_result.grid(row=6, column=0, columnspan=2, padx=10, pady=10)

    def add_grade(self):
        student_name = self.entry_name.get()
        grade_str = self.entry_grade.get()

        if not student_name or not grade_str:
            messagebox.showerror("Error", "Please enter both student name and grade.")
            return

        try:
            grade = float(grade_str)
        except ValueError:
            messagebox.showerror("Error", "Grade must be a number.")
            return

        self.students.append((student_name, grade))
        self.listbox_students.insert(tk.END, f"{student_name}: {grade}")
        self.label_result.config(text="Grade added for {}".format(student_name))
        self.clear_entries()

    def clear_entries(self):
        self.entry_name.delete(0, tk.END)
        self.entry_grade.delete(0, tk.END)

    def clear_list(self):
        self.listbox_students.delete(0, tk.END)
        self.students = []
        self.label_result.config(text="List cleared")

    def calculate_average(self):
        if not self.students:
            messagebox.showinfo("No Data", "No student data available.")
            return

        total_grades = sum(grade for _, grade in self.students)
        average_grade = total_grades / len(self.students)
        self.label_result.config(text="Average Grade: {:.2f}".format(average_grade))

if __name__ == "__main__":
    root = tk.Tk()
    app = StudentGradeTrackerGUI(root)
    root.mainloop()
